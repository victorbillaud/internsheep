// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  firstname     String?
  lastname      String?
  password      String?
  role          Role         @default(ADMIN)
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Internship    Internship[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  ADMIN
  STUDENT
  TUTOR
}

model Internship {
  id           Int     @id @default(autoincrement())
  companyName  String?
  mission      String?
  startDate    String?
  endDate      String?
  rythm        String?
  numberWeeks  Int?
  remuneration Int?
  userId       String
  files        File[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model File {
  id           Int     @id @default(autoincrement())
  name         String?
  type         String?
  size         Int?
  url          String?
  userId       String
  internshipId Int

  internship Internship @relation(fields: [internshipId], references: [id], onDelete: Cascade)
}
